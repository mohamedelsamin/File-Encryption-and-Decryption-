# -*- coding: utf-8 -*-
"""Encrypted & Decrypted file.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zi7-KGdYdksq8Yo3UKLil3K3oBYzRyiF
"""

pip install cryptography

from cryptography.fernet import Fernet
from google.colab import files
import os

def generate_key():
    key = Fernet.generate_key()
    with open("secret.key", "wb") as key_file:
        key_file.write(key)
    print("Key generated and saved as secret.key")

def load_key():
    return open("secret.key", "rb").read()

def decrypt_file(enc_path, output_filename):
    key = load_key()
    fernet = Fernet(key)

    with open(enc_path, "rb") as enc_file:
        encrypted = enc_file.read()

    try:
        decrypted = fernet.decrypt(encrypted)
        with open(output_filename, "wb") as dec_file:
            dec_file.write(decrypted)
        print(f"File decrypted and saved as {output_filename}")
        files.download(output_filename)
    except:
        print("Error: Invalid key or corrupted file.")

uploaded = files.upload()  # Upload a file
filename = next(iter(uploaded))  # Get the file name

generate_key()  # Generate key (only run once, reuse key later)
encrypt_file(filename)

files.download("Scientific Calculator.py.enc")

uploaded = files.upload()  # Upload encrypted file
filename = next(iter(uploaded))  # Get encrypted file name

uploaded_key = files.upload()  # Upload the `secret.key` used for encryption

output_name = input("Enter output filename (e.g. original.txt): ")
decrypt_file(filename, output_name)